# This is a basic workflow to help you get started with Actions

name: Deploy

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  #----------------------------BUILD----------------------------------
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
    # Checks-out our repository under $GITHUB_WORKSPACE, so our job can access it
      - uses: actions/checkout@v2
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: '5.0.100'
      - name: Install dependencies
        run: dotnet restore MiniTwitApi
      - name: Build
        run: dotnet build MiniTwitApi --no-restore
  #----------------------------TEST-------------------------------------
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    steps:
    # Checks-out our repository under $GITHUB_WORKSPACE, so our job can access it
      - uses: actions/checkout@v2
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: '5.0.100'
      - name: Install dependencies
        run: dotnet restore MiniTwitApi
      - name: Test
        run: dotnet test MiniTwitApi.Tests/MiniTwitApi.Tests.csproj
  #----------------------------SONNARSCANNER----------------------------
  sonarscanner_code_check:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    steps:
    # Checks-out our repository under $GITHUB_WORKSPACE, so our job can access it
      - uses: actions/checkout@v2
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: '5.0.100'
      - name: Sonarscanner for dotnet
        uses: Secbyte/dotnet-sonarscanner@v2.3
        with:
          buildCommand: dotnet build MiniTwitApi
          testCommand: dotnet test MiniTwitApi.Tests/MiniTwitApi.Tests.csproj --logger "junit;LogFilePath=testResults/results.xml" /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
          projectKey: jokk-itu_PythonKindergarten
          projectName: jokk-itu_PythonKindergarten
          sonarOrganisation: jokk-itu
          beginArguments: >
              /d:sonar.verbose="true"
              /d:sonar.cs.opencover.reportsPaths='"MiniTwitApi.Tests/coverage.opencover.xml"'
              /d:sonar.coverage.exclusions='"**/*.cs","**/*.md"'
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #----------------------------DOCKERBUILD------------------------------
  docker_build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    steps:
    # Checks-out our repository under $GITHUB_WORKSPACE, so our job can access it
      - uses: actions/checkout@v2
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: '5.0.100'
      - name: Install dependencies
        run: dotnet restore MiniTwitApi
      - name: Login to Docker
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Docker build
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}E/pythonkindergartenimage:latest . -f Dockerfile
      - name: Docker push
        run: docker push ${{ secrets.DOCKER_USERNAME }}/pythonkindergartenimage:latest
  #----------------------------DEPLOY------------------------------------
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    steps:
    # Checks-out our repository under $GITHUB_WORKSPACE, so our job can access it
      - uses: actions/checkout@v2
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: '5.0.100'
      - name: Install dependencies
        run: dotnet restore MiniTwitApi
      - name: Deploy
        run: ssh -o "StrictHostKeyChecking no" ${{ secrets.MT_USER }}@${{ secrets.MT_SERVER }} \ "cd /vagrant/production && \ docker-compose pull && \ docker-compose up -d && \ docker pull ${{ secrets.DOCKER_USERNAME }}/pythonkindergartenimage:latest
  release:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    steps:
      - run: echo "Needs to be implemented"
