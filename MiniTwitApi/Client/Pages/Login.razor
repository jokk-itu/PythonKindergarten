@page "/login"
@using MiniTwitApi.Client.ViewModels.Abstract
@using MiniTwitApi.Shared
@using Newtonsoft.Json
@inject ILoginViewModel LoginViewModel 
@inject IJSRuntime JSRuntime

<h2>Sign In</h2>

@if (LoginViewModel.Error is not null)
{
    <div class="alert alert-danger" role="alert">
        <p>@LoginViewModel.Error</p>
    </div>
}

<EditForm Model="@LoginViewModel.User" OnValidSubmit="@LoginViewModel.LoginUser">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label for="Username">Username</label>
        <input @bind="LoginViewModel.User.Username" type="text" class="form-control" id="Username" placeholder="Write your Username here" />
    </div>
    <div class="form-group">
        <label for="Password">Password</label>
        <input @bind="LoginViewModel.User.Password" class="form-control" type="password" id="Password" placeholder="Write your password here" />
    </div>
    <button type="submit" class="btn btn-primary">Sign In</button>
</EditForm>

@if (LoginViewModel.LoggedInUser is not null)
{
    <div class="alert alert-success" role="alert">
        <p>Successfully logged in</p>
        <!---Call redirect function here-->
    </div>
}

@if (LoginViewModel.LoggedInUser is not null)
{
    var json = JsonConvert.SerializeObject(LoginViewModel.LoggedInUser);
    var response = JSRuntime.InvokeAsync<string>("login", json);
}