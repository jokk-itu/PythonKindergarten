@page "/register" 
@using System.Data.SQLite;
@using Newtonsoft.Json;
@using System;
@using System.Net.Http;
@using System.Net.Security
@using System.Text;
@using MiniTwitApi.Shared.Models;

@inject HttpClient httpClient


<h2>Register</h2>

@if(ErrorRaised)
{
    <div class="error"><strong>Error:</strong> @ErrorMessage</div>
}

<EditForm EditContext="EditContext" OnValidSubmit="@CreateNewProfile">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <p>
        <label>
            Username:
            <InputText @bind-Value="_dto.Username" />
        </label>
    </p>
    <p>
        <label>
            E-mail:
            <InputText @bind-Value="_dto.Email" />
        </label>
    </p>
    <p>
        <label>
            Password:
            <InputText @bind-Value="_dto.Password" />
        </label>
    </p>
    @*<div class="form-group">
        <label for="passwordrepeat">Password (repeat):</label>
        <input type="passwordrepeat" class="form-control" size=30 id="passwordrepeat">
    </div>*@
    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>

@code{
    private UserDTO _dto;
    private bool ErrorRaised = false;
    private string ErrorMessage;
    public EditContext EditContext;

    protected override void OnInitialized()
    {
        _dto = new UserDTO();
        EditContext = new EditContext(_dto);
    }
    
    private async Task CreateNewProfile(EditContext editContext)
    {
        var json = JsonConvert.SerializeObject(editContext);
        var data = new StringContent(json, Encoding.UTF8, "application/json");
        
        try
        {
            var response = await httpClient.PostAsync($"/register", data);
            var result = response.Content.ReadAsStringAsync().Result;
            Console.WriteLine(result);
            Console.WriteLine("User created");
        }
        catch (Exception e)
        {
            ErrorRaised = true;
            ErrorMessage = e.Message;
        }
    }
}