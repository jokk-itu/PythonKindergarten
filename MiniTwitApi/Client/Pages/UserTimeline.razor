@page "/timeline/user_timeline/{username}"
@using MiniTwitApi.Shared.Models.UserModels
@using System.Text.Json;
@using MiniTwitApi.Client.ViewModels.Abstract

@inject HttpClient HttpClient;
@inject IJSRuntime JSRuntime;
@inject IUserTimelineViewModel UserTimelineViewModel;
@inject NavigationManager NavManager; 

<h2>@Username's Timeline</h2>

<Error ViewModel="@UserTimelineViewModel"/>

<AuthorizeView>
    <Authorized>
        <div class=followstatus>
            @if (@context.User.Identity.Name.Equals(Username))
            {
                NavManager.NavigateTo("/timeline/my_timeline");
            }
            else if (UserTimelineViewModel.IsFollowed && !UserTimelineViewModel.IsUnfollowed)
            {
                <p>You are currently following this user.</p>
                <button class="btn btn-primary" @onclick="@(() => UserTimelineViewModel.UnfollowUser(@context.User.Identity.Name))">Unfollow User</button>
            }
            else
            {
                <p>You are not yet following this user.</p>
                <button class="btn btn-primary" @onclick="@(() => UserTimelineViewModel.FollowUser(@context.User.Identity.Name))">Follow User</button>
            }
            @if (UserTimelineViewModel.FollowIsDone || UserTimelineViewModel.UnFollowIsDone)
            {
                HandleAction();
            }
        </div>
    </Authorized>
</AuthorizeView>

@if (!string.IsNullOrEmpty(UserTimelineViewModel.Path))
{
    <Messages path="@UserTimelineViewModel.Path"/>
}

@code
{
    [Parameter]
    public string Username { get; set; }

    protected override async Task OnInitializedAsync()
    {
        UserTimelineViewModel.Username = Username;
        UserTimelineViewModel.Path = $"msgs/{Username}";
        await UserTimelineViewModel.IsUserFollowed();
    }

    private async Task HandleAction()
    {
        var action = UserTimelineViewModel.FollowIsDone ? "followed" : "unfollowed";
        await JSRuntime.InvokeVoidAsync("successMessage", $"{Username} is now {action}");
        UserTimelineViewModel.IsUnfollowed = UserTimelineViewModel.IsUnfollowed;
        UserTimelineViewModel.IsFollowed = UserTimelineViewModel.IsFollowed;
    }
}